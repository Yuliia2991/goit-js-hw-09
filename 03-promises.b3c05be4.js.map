{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAuBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAQ,UAAEH,QAAUC,IAEtBG,EAAO,UAAEJ,QAAUC,MAClBA,MA7BPL,EAAKa,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,MARFV,MAQUW,EARVC,KAQiBA,EARjBC,OAQuBA,GAAWlB,EAAKmB,SACrC,IAAIC,EAAeC,OAAOL,EAAMM,OAChC,MAAMC,EAAcF,OAAOJ,EAAKK,OAC1BE,EAAgBH,OAAOH,EAAOI,OAEpC,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAeC,GAAY,EAC5DtB,EAAcsB,EAAUL,GACrBM,MAAK,EAfZtB,SAeeA,EAffC,MAeyBA,KACjBP,EAAA6B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,SAEtDwB,OAAM,EAlBbzB,SAkBgBA,EAlBhBC,MAkB0BA,KAClBP,EAAA6B,OAAOG,QAAQ,sBAAoB1B,QAAeC,SAEtDe,GAAgBG","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const { delay, step, amount } = form.elements;\n  let promiseDelay = Number(delay.value);\n  const promiseStep = Number(step.value);\n  const promiseAmount = Number(amount.value);\n\n  for (let position = 1; position <= promiseAmount; position += 1) {\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    promiseDelay += promiseStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","step","amount","elements","promiseDelay","Number","value","promiseStep","promiseAmount","position1","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.b3c05be4.js.map"}