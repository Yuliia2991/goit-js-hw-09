{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAuBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,SAAAA,EAAUC,MAAAA,IAEtBG,EAAO,CAAEJ,SAAAA,EAAUC,MAAAA,MAClBA,MA7BPL,EAAKa,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAMF,IALA,IAAgCC,EAAAhB,EAAKiB,SAA7BC,EAAwBF,EAAxBX,MAAOc,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAAeC,OAAOJ,EAAMK,OAC1BC,EAAcF,OAAOH,EAAKI,OAC1BE,EAAgBH,OAAOF,EAAOG,OAE3BG,EAAW,EAAGA,GAAYD,EAAeC,GAAY,EAC5DvB,EAAcuB,EAAUL,GACrBM,MAAK,SAAAC,OAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,aACjBP,EAAA+B,OAAOC,QAAS,uBAAuCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,UAE9D2B,OAAM,SAAAJ,OAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,aAClBP,EAAA+B,OAAOI,QAAS,sBAAoCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,UAE9DgB,GAAgBG","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const { delay, step, amount } = form.elements;\n  let promiseDelay = Number(delay.value);\n  const promiseStep = Number(step.value);\n  const promiseAmount = Number(amount.value);\n\n  for (let position = 1; position <= promiseAmount; position += 1) {\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    promiseDelay += promiseStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","_elements","elements","delay1","step","amount","promiseDelay","Number","value","promiseStep","promiseAmount","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.0baaa487.js.map"}